FROM nvidia/cuda:11.7.0-cudnn8-devel-ubuntu18.04

RUN apt-get update && \
      apt-get -y install sudo

ARG DEBIAN_FRONTEND=noninteractive
ENV TZ=America/New_York

RUN apt update -y && sudo apt upgrade -y && \
    apt-get install -y wget build-essential checkinstall  libreadline-gplv2-dev  libncursesw5-dev  libssl-dev  libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev libffi-dev zlib1g-dev && \
    cd /usr/src && \
    sudo wget https://www.python.org/ftp/python/3.8.10/Python-3.8.10.tgz && \
    sudo tar xzf Python-3.8.10.tgz && \
    cd Python-3.8.10 && \
    sudo ./configure --enable-optimizations && \
    sudo make install

RUN ln -s /usr/local/bin/python3 /usr/bin/python
#RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.8

RUN python -m pip --version

RUN apt-get update && apt-get install apt-transport-https ca-certificates gnupg software-properties-common -y

RUN apt-get update && apt-get -y install \
    build-essential libpcre3 libpcre3-dev zlib1g zlib1g-dev libssl-dev wget

RUN apt-get update && apt-get install -y \
    git \ 
    curl \ 
    libx11-dev \
    libxrandr-dev \
    libxinerama-dev \
    libxcursor-dev \
    libxi-dev \
    libglew-dev \
    libboost-dev

#RUN apt-get install -y python3.8-dev
#RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.8
#RUN apt-get install -y python3-pip

#RUN python -m pip install pip
#RUN ln -s /usr/bin/pip3 /usr/bin/pip

#RUN python -m pip install -U pip

# Make sure python is not fucked up
RUN python --version 

RUN python -m pip --version

RUN python -m pip install numpy


RUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | apt-key add -
RUN apt-add-repository 'deb https://apt.kitware.com/ubuntu/ bionic main'
RUN apt-get update && apt-get install cmake -y

# git clone dir from zaalsabb fork
WORKDIR /project
RUN git clone https://github.com/zaalsabb/NeRF-SLAM.git --recurse-submodules
WORKDIR /project/NeRF-SLAM
RUN git submodule update --init --recursive
RUN cd thirdparty/instant-ngp/ && git checkout feature/nerf_slam

# copy files
# WORKDIR /project/NeRF-SLAM
# COPY ./thirdparty /project/NeRF-SLAM/thirdparty
# COPY ./requirements.txt /project/NeRF-SLAM/requirements.txt
#RUN python -m pip install -U pip
#RUN pip install -U pip

RUN python --version
RUN python -m pip install numpy
#RUN pip install torch==1.13.1+cu117 torchvision==0.14.1+cu117 --extra-index-url https://download.pytorch.org/whl/cu117
RUN python -m pip install torch==1.13.1+cu117 torchvision==0.14.1+cu117 --extra-index-url https://download.pytorch.org/whl/cu117 --no-cache-dir
#RUN pip install torch==1.13.1+cu117 torchvision==0.14.1+cu117 torchaudio==0.13.1 --extra-index-url https://download.pytorch.org/whl/cu117
RUN python -m pip install -r requirements.txt --no-cache-dir 
RUN python -m pip install -r ./thirdparty/gtsam/python/requirements.txt

RUN cmake ./thirdparty/instant-ngp -B build_ngp
RUN cmake --build build_ngp --config RelWithDebInfo -j

RUN sudo apt install -y libboost-all-dev

RUN cmake ./thirdparty/gtsam -DGTSAM_BUILD_PYTHON=1 -DGTSAM_PYTHON_VERSION=3.8 -B build_gtsam 
RUN cmake --build build_gtsam --config RelWithDebInfo -j
#RUN cd build_gtsam
RUN cd build_gtsam && make python-install
#RUN cd ..


RUN sudo apt-get install -y unzip

# Download Gdown
RUN apt-get install -y python3-pip
# COPY ./scripts /project/NeRF-SLAM/scripts
# RUN ./scripts/download_replica_sample.bash

RUN python3 setup.py install

# set environment variables
# ENV PYTHONDONTWRITEBYTECODE 1
# ENV PYTHONUNBUFFERED 1

# only copy these files to not rebuild docker image
COPY ./app.py /project/NeRF-SLAM/app.py
COPY ./gui /project/NeRF-SLAM/gui
COPY ./utils /project/NeRF-SLAM/utils
COPY ./config /project/NeRF-SLAM/config
COPY ./fusion /project/NeRF-SLAM/fusion
COPY ./examples /project/NeRF-SLAM/examples
COPY ./app.py /project/NeRF-SLAM/app.py
COPY ./nerf_slam.py /project/NeRF-SLAM/nerf_slam.py
COPY ./nerf_dataset.py /project/NeRF-SLAM/nerf_dataset.py
COPY ./data_module.py /project/NeRF-SLAM/data_module.py

# ENTRYPOINT ["python3", "app.py"]
CMD ["python3", "nerf_slam.py"]
